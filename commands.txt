C:\Users\171103>mkdir lab1

C:\Users\171103>cd lab1

C:\Users\171103\lab1>git init
Initialized empty Git repository in C:/Users/171103/lab1/.git/

C:\Users\171103\lab1>notepad l1.txt

C:\Users\171103\lab1>git add .

C:\Users\171103\lab1>
C:\Users\171103\lab1>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   l1.txt


C:\Users\171103\lab1>git commit -m "Initial commit"
[master (root-commit) 208e03c] Initial commit
 Committer: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
 create mode 100644 l1.txt

C:\Users\171103\lab1>git status
On branch master
nothing to commit, working tree clean

C:\Users\171103\lab1>git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   l1.txt

no changes added to commit (use "git add" and/or "git commit -a")

C:\Users\171103\lab1>git add .

C:\Users\171103\lab1>git commit "modify l1.txt"
error: pathspec 'modify l1.txt' did not match any file(s) known to git

C:\Users\171103\lab1>git commit -m "modify l1.txt"
[master 9b9ebc8] modify l1.txt
 Committer: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 2 insertions(+), 1 deletion(-)

C:\Users\171103\lab1>git remote add origin https://github.com/Ace157/SI_171103_lab1.git

C:\Users\171103\lab1>git push -u origin master
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (6/6), 467 bytes | 93.00 KiB/s, done.
Total 6 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/Ace157/SI_171103_lab1.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

C:\Users\171103\lab1>git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   l1.txt

no changes added to commit (use "git add" and/or "git commit -a")

C:\Users\171103\lab1>git commit -a -m "modified l1.txt"
[master 05b3123] modified l1.txt
 Committer: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 2 insertions(+), 1 deletion(-)

C:\Users\171103\lab1>git checkout --l1.txt
error: unknown option `l1.txt'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -q, --quiet           suppress progress reporting
    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --detach              detach HEAD at named commit
    -t, --track           set upstream info for new branch
    --orphan <new-branch>
                          new unparented branch
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -f, --force           force checkout (throw away local modifications)
    -m, --merge           perform a 3-way merge with the new branch
    --overwrite-ignore    update ignored files (default)
    --conflict <style>    conflict style (merge or diff3)
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting


C:\Users\171103\lab1>git checkout -- l1.txt

C:\Users\171103\lab1>git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

C:\Users\171103\lab1>git checkout -- l1.txt

C:\Users\171103\lab1>git checkout -- l1.txt

C:\Users\171103\lab1>git checkout -- l1.txt

C:\Users\171103\lab1>git reset HEAD^
More?
More? :wq
fatal: Invalid object name 'HEAD
'.

C:\Users\171103\lab1>git commit -a -m " "
Aborting commit due to empty commit message.

C:\Users\171103\lab1>git commit -a -m "Commit "
[master 3ab70c5] Commit
 Committer: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 deletion(-)

C:\Users\171103\lab1>git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   l1.txt

no changes added to commit (use "git add" and/or "git commit -a")

C:\Users\171103\lab1>git checkout -- l1.txt

C:\Users\171103\lab1>git bracnch logging
git: 'bracnch' is not a git command. See 'git --help'.

The most similar command is
        branch

C:\Users\171103\lab1>git branch logging

C:\Users\171103\lab1>git checkout logging
Switched to branch 'logging'

C:\Users\171103\lab1>notepad log.txt

C:\Users\171103\lab1>git log
commit 3ab70c5ad631da294b67ef77d17a69dbaf4ebe5a (HEAD -> logging, master)
Author: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Date:   Thu Mar 21 10:47:19 2019 +0100

    Commit

commit 05b31237b66cfe0bcd5e643d97892e3d31006b6c
Author: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Date:   Thu Mar 21 10:40:02 2019 +0100

    modified l1.txt

commit 9b9ebc80495579fd60b4788ea8c3c5fef5d866b9 (origin/master)
Author: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Date:   Thu Mar 21 10:34:11 2019 +0100

    modify l1.txt

commit 208e03c47951c7c721af6bf594d6158f8360b883
Author: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Date:   Thu Mar 21 10:32:26 2019 +0100

    Initial commit

C:\Users\171103\lab1>git add .

C:\Users\171103\lab1>git status
On branch logging
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   log.txt


C:\Users\171103\lab1>git commit -m "log.txt"
[logging f0ef748] log.txt
 Committer: unknown <Aleksandar.Dimitrov@students.finki.ukim.mk>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 24 insertions(+)
 create mode 100644 log.txt

C:\Users\171103\lab1>git push -u
fatal: The current branch logging has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin logging


C:\Users\171103\lab1>git push -u logging
fatal: 'logging' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

C:\Users\171103\lab1>git checkout logging
Already on 'logging'

C:\Users\171103\lab1>git push -u logging
fatal: 'logging' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

C:\Users\171103\lab1>git add .

C:\Users\171103\lab1>git commit -m "log.txt"
On branch logging
nothing to commit, working tree clean

C:\Users\171103\lab1>git push -u logging
fatal: 'logging' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

C:\Users\171103\lab1>git branch
* logging
  master

C:\Users\171103\lab1>git push origin logging
Enumerating objects: 11, done.
Counting objects: 100% (11/11), done.
Delta compression using up to 4 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (9/9), 1.09 KiB | 186.00 KiB/s, done.
Total 9 (delta 0), reused 0 (delta 0)
remote:
remote: Create a pull request for 'logging' on GitHub by visiting:
remote:      https://github.com/Ace157/SI_171103_lab1/pull/new/logging
remote:
To https://github.com/Ace157/SI_171103_lab1.git
 * [new branch]      logging -> logging

C:\Users\171103\lab1>git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)

C:\Users\171103\lab1>git merge logging
Updating 3ab70c5..f0ef748
Fast-forward
 log.txt | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 log.txt

C:\Users\171103\lab1>git push -u
Total 0 (delta 0), reused 0 (delta 0)
To https://github.com/Ace157/SI_171103_lab1.git
   9b9ebc8..f0ef748  master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

C:\Users\171103\lab1>git branch allcomands

C:\Users\171103\lab1>git branch
  allcomands
  logging
* master

C:\Users\171103\lab1>git checkout allvomands
error: pathspec 'allvomands' did not match any file(s) known to git

C:\Users\171103\lab1>git checkout allcomands
Switched to branch 'allcomands'

C:\Users\171103\lab1>notepad commands.txt